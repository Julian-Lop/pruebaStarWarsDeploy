{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_FILMS, GET_ALL_STARSHIPS, GET_ALL_VEHICLES, RESET_STATE, GET_ALL_PEOPLE, GET_CHARACTERS_BY_FILM, GET_ALL_PLANETS } from '../Actions/types.js';\nexport const getAllFilms = () => {\n  return async function (dispatch) {\n    try {\n      let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/films/?format=json`);\n      return dispatch({\n        type: GET_ALL_FILMS,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getAllStarships = page => {\n  return async function (dispatch) {\n    try {\n      let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/starships/?page=${page ? page : 1}`);\n      return dispatch({\n        type: GET_ALL_STARSHIPS,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getAllVehicles = page => {\n  return async function (dispatch) {\n    try {\n      let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/vehicles/?page=${page ? page : 1}`);\n      return dispatch({\n        type: GET_ALL_VEHICLES,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const resetState = info => {\n  return function (dispatch) {\n    return dispatch({\n      type: RESET_STATE,\n      payload: info\n    });\n  };\n};\nexport const getAllPeople = page => {\n  return async function (dispatch) {\n    try {\n      let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/people/?page=${page}`);\n      return dispatch({\n        type: GET_ALL_PEOPLE,\n        payload: json.data.results\n      });\n    } catch (error) {}\n  };\n};\nexport const getCharactersByFiml = () => {\n  return function (dispatch) {\n    return dispatch({\n      type: GET_CHARACTERS_BY_FILM,\n      payload: null\n    });\n  };\n};\nexport const getAllPlanets = page => {\n  return async function (dispatch) {\n    try {\n      let json = await `${process.env.REACT_APP_URL_SWAPI}planets/?page=${page}`;\n      return dispatch({\n        type: GET_ALL_PLANETS,\n        payload: json\n      });\n    } catch (error) {}\n  };\n};","map":{"version":3,"sources":["E:/FULL STACK/proyectos/pruebaStarWars-OnClick/front-starwars/src/Redux/Actions/index.js"],"names":["axios","GET_ALL_FILMS","GET_ALL_STARSHIPS","GET_ALL_VEHICLES","RESET_STATE","GET_ALL_PEOPLE","GET_CHARACTERS_BY_FILM","GET_ALL_PLANETS","getAllFilms","dispatch","json","process","env","REACT_APP_URL_SWAPI","type","payload","data","error","console","log","getAllStarships","page","getAllVehicles","resetState","info","getAllPeople","results","getCharactersByFiml","getAllPlanets"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    GET_ALL_FILMS,\r\n    GET_ALL_STARSHIPS,\r\n    GET_ALL_VEHICLES,\r\n    RESET_STATE,\r\n    GET_ALL_PEOPLE,\r\n    GET_CHARACTERS_BY_FILM,\r\n    GET_ALL_PLANETS\r\n} from '../Actions/types.js'\r\n\r\nexport const getAllFilms = () => {\r\n    return async function(dispatch){\r\n        try {\r\n            let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/films/?format=json`)\r\n            return dispatch({type: GET_ALL_FILMS, payload: json.data})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllStarships = (page) => {\r\n    return  async function(dispatch){\r\n        try {\r\n            let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/starships/?page=${page?page:1}`)\r\n            return dispatch({type: GET_ALL_STARSHIPS, payload: json.data})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllVehicles = (page) => {\r\n    return async function(dispatch){\r\n        try {\r\n            let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/vehicles/?page=${page?page:1}`)\r\n            return dispatch({type: GET_ALL_VEHICLES, payload: json.data})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const resetState = (info) => {\r\n    return function(dispatch){\r\n        return dispatch({type: RESET_STATE, payload:info})\r\n    }\r\n}\r\n\r\n\r\nexport const getAllPeople = (page) => {\r\n    return async function(dispatch){\r\n        try {\r\n            let json = await axios(`${process.env.REACT_APP_URL_SWAPI}/people/?page=${page}`)\r\n            return dispatch({type: GET_ALL_PEOPLE, payload:json.data.results})\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getCharactersByFiml = () => {\r\n    return function(dispatch){\r\n        return dispatch({type: GET_CHARACTERS_BY_FILM, payload: null})\r\n    }\r\n}\r\n\r\n\r\nexport const getAllPlanets = (page) => {\r\n    return async function(dispatch){\r\n        try {\r\n            let json = await(`${process.env.REACT_APP_URL_SWAPI}planets/?page=${page}`)\r\n            return dispatch({type: GET_ALL_PLANETS, payload: json})\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}