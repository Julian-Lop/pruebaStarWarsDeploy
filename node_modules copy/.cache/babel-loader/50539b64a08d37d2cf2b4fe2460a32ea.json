{"ast":null,"code":"import _toConsumableArray from\"E:/FULL STACK/proyectos/pruebaStarWars-OnClick/front-starwars/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"E:/FULL STACK/proyectos/pruebaStarWars-OnClick/front-starwars/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_ALL_FILMS,GET_ALL_STARSHIPS,GET_ALL_VEHICLES,RESET_STATE,GET_ALL_PEOPLE,GET_CHARACTERS_BY_FILM,GET_ALL_PLANETS,STARSHIPS_FOR_MAPING,VEHICLES_FOR_MAPING}from\"../Actions/types\";var initialState={films:[],starships:[],vehicles:[],characters:[],planets:[],starshipsformaping:[],vehiclesformpaing:[]};export default function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case GET_ALL_FILMS:return _objectSpread(_objectSpread({},state),{},{films:payload});case GET_ALL_STARSHIPS:return _objectSpread(_objectSpread({},state),{},{starships:payload});case GET_ALL_VEHICLES:return _objectSpread(_objectSpread({},state),{},{vehicles:payload});case RESET_STATE:if(payload==='vehicles'){return _objectSpread(_objectSpread({},state),{},{vehicles:[]});}else{return _objectSpread(_objectSpread({},state),{},{starships:[]});}case GET_ALL_PEOPLE:return _objectSpread(_objectSpread({},state),{},{characters:_toConsumableArray(state.characters.concat(payload))});case GET_CHARACTERS_BY_FILM:state.characters.map(function(character){character.films.map(function(filmcharact){var indexFilm=Number(filmcharact.substr(-2,1));if(!state.films.results[indexFilm-1].people){state.films.results[indexFilm-1].people=[];}state.films.results[indexFilm-1].people.push(character);});});return _objectSpread({},state);case GET_ALL_PLANETS:return _objectSpread(_objectSpread({},state),{},{planets:_toConsumableArray(state.planets.concat(payload))});case STARSHIPS_FOR_MAPING:return _objectSpread(_objectSpread({},state),{},{starshipsformaping:_toConsumableArray(state.starshipsformaping.concat(payload))});case VEHICLES_FOR_MAPING:return _objectSpread(_objectSpread({},state),{},{vehiclesformpaing:_toConsumableArray(state.vehiclesformpaing.concat(payload))});default:return state;}}","map":{"version":3,"sources":["E:/FULL STACK/proyectos/pruebaStarWars-OnClick/front-starwars/src/Redux/Reducer/index.js"],"names":["GET_ALL_FILMS","GET_ALL_STARSHIPS","GET_ALL_VEHICLES","RESET_STATE","GET_ALL_PEOPLE","GET_CHARACTERS_BY_FILM","GET_ALL_PLANETS","STARSHIPS_FOR_MAPING","VEHICLES_FOR_MAPING","initialState","films","starships","vehicles","characters","planets","starshipsformaping","vehiclesformpaing","rootReducer","state","type","payload","concat","map","character","filmcharact","indexFilm","Number","substr","results","people","push"],"mappings":"6SAAA,OACIA,aADJ,CAEIC,iBAFJ,CAGIC,gBAHJ,CAIIC,WAJJ,CAKIC,cALJ,CAMIC,sBANJ,CAOIC,eAPJ,CAQIC,oBARJ,CASIC,mBATJ,KAUO,kBAVP,CAYA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAG,EADS,CAEjBC,SAAS,CAAG,EAFK,CAGjBC,QAAQ,CAAG,EAHM,CAIjBC,UAAU,CAAG,EAJI,CAKjBC,OAAO,CAAG,EALO,CAMjBC,kBAAkB,CAAG,EANJ,CAOjBC,iBAAiB,CAAG,EAPH,CAArB,CAUA,cAAe,SAASC,CAAAA,WAAT,EAA2D,IAAtCC,CAAAA,KAAsC,2DAA9BT,YAA8B,oDAAfU,IAAe,MAAfA,IAAe,CAATC,OAAS,MAATA,OAAS,CACtE,OAAOD,IAAP,EACI,IAAKnB,CAAAA,aAAL,CACI,sCACOkB,KADP,MAEIR,KAAK,CAAGU,OAFZ,GAKJ,IAAKnB,CAAAA,iBAAL,CACI,sCACOiB,KADP,MAEIP,SAAS,CAAGS,OAFhB,GAKJ,IAAKlB,CAAAA,gBAAL,CACI,sCACOgB,KADP,MAEIN,QAAQ,CAAGQ,OAFf,GAKJ,IAAKjB,CAAAA,WAAL,CACI,GAAGiB,OAAO,GAAK,UAAf,CAA0B,CACtB,sCACOF,KADP,MAEIN,QAAQ,CAAG,EAFf,GAIH,CALD,IAKK,CACD,sCACOM,KADP,MAEIP,SAAS,CAAG,EAFhB,GAIH,CAEL,IAAKP,CAAAA,cAAL,CACI,sCACOc,KADP,MAEIL,UAAU,oBAAOK,KAAK,CAACL,UAAN,CAAiBQ,MAAjB,CAAwBD,OAAxB,CAAP,CAFd,GAKJ,IAAKf,CAAAA,sBAAL,CAEIa,KAAK,CAACL,UAAN,CAAiBS,GAAjB,CAAqB,SAAAC,SAAS,CAAI,CAC9BA,SAAS,CAACb,KAAV,CAAgBY,GAAhB,CAAoB,SAAAE,WAAW,CAAI,CAC/B,GAAIC,CAAAA,SAAS,CAAGC,MAAM,CAACF,WAAW,CAACG,MAAZ,CAAmB,CAAC,CAApB,CAAsB,CAAtB,CAAD,CAAtB,CACA,GAAG,CAACT,KAAK,CAACR,KAAN,CAAYkB,OAAZ,CAAoBH,SAAS,CAAC,CAA9B,EAAiCI,MAArC,CAA4C,CACxCX,KAAK,CAACR,KAAN,CAAYkB,OAAZ,CAAoBH,SAAS,CAAC,CAA9B,EAAiCI,MAAjC,CAA0C,EAA1C,CACH,CACDX,KAAK,CAACR,KAAN,CAAYkB,OAAZ,CAAoBH,SAAS,CAAC,CAA9B,EAAiCI,MAAjC,CAAwCC,IAAxC,CAA6CP,SAA7C,EAEH,CAPD,EAQH,CATD,EAUA,wBACOL,KADP,EAIJ,IAAKZ,CAAAA,eAAL,CACI,sCACOY,KADP,MAEIJ,OAAO,oBAAOI,KAAK,CAACJ,OAAN,CAAcO,MAAd,CAAqBD,OAArB,CAAP,CAFX,GAKJ,IAAKb,CAAAA,oBAAL,CACI,sCACOW,KADP,MAEIH,kBAAkB,oBAAOG,KAAK,CAACH,kBAAN,CAAyBM,MAAzB,CAAgCD,OAAhC,CAAP,CAFtB,GAKJ,IAAKZ,CAAAA,mBAAL,CACI,sCACOU,KADP,MAEIF,iBAAiB,oBAAOE,KAAK,CAACF,iBAAN,CAAwBK,MAAxB,CAA+BD,OAA/B,CAAP,CAFrB,GAKJ,QACA,MAAOF,CAAAA,KAAP,CAzEJ,CA2EH","sourcesContent":["import {\r\n    GET_ALL_FILMS,\r\n    GET_ALL_STARSHIPS,\r\n    GET_ALL_VEHICLES,\r\n    RESET_STATE,\r\n    GET_ALL_PEOPLE,\r\n    GET_CHARACTERS_BY_FILM,\r\n    GET_ALL_PLANETS,\r\n    STARSHIPS_FOR_MAPING,\r\n    VEHICLES_FOR_MAPING\r\n} from \"../Actions/types\" \r\n\r\nconst initialState = {\r\n    films : [],\r\n    starships : [],\r\n    vehicles : [],\r\n    characters : [],\r\n    planets : [],\r\n    starshipsformaping : [],\r\n    vehiclesformpaing : []\r\n}\r\n\r\nexport default function rootReducer(state = initialState, {type, payload}){\r\n    switch(type){\r\n        case GET_ALL_FILMS:\r\n            return{\r\n                ...state,\r\n                films : payload\r\n            }\r\n        \r\n        case GET_ALL_STARSHIPS:\r\n            return{\r\n                ...state,\r\n                starships : payload\r\n            }\r\n        \r\n        case GET_ALL_VEHICLES:\r\n            return{\r\n                ...state,\r\n                vehicles : payload\r\n            }\r\n\r\n        case RESET_STATE:\r\n            if(payload === 'vehicles'){\r\n                return{\r\n                    ...state,\r\n                    vehicles : []\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    starships : []\r\n                }\r\n            }\r\n        \r\n        case GET_ALL_PEOPLE:\r\n            return{\r\n                ...state,\r\n                characters : [...state.characters.concat(payload)]\r\n            }\r\n        \r\n        case GET_CHARACTERS_BY_FILM:\r\n\r\n            state.characters.map(character => {\r\n                character.films.map(filmcharact => {\r\n                    let indexFilm = Number(filmcharact.substr(-2,1))\r\n                    if(!state.films.results[indexFilm-1].people){\r\n                        state.films.results[indexFilm-1].people = []\r\n                    } \r\n                    state.films.results[indexFilm-1].people.push(character)\r\n                    \r\n                })\r\n            })\r\n            return{\r\n                ...state\r\n            }\r\n        \r\n        case GET_ALL_PLANETS:\r\n            return{\r\n                ...state,\r\n                planets : [...state.planets.concat(payload)]\r\n            }\r\n        \r\n        case STARSHIPS_FOR_MAPING:\r\n            return{\r\n                ...state,\r\n                starshipsformaping : [...state.starshipsformaping.concat(payload)]\r\n            }\r\n        \r\n        case VEHICLES_FOR_MAPING:\r\n            return{\r\n                ...state,\r\n                vehiclesformpaing : [...state.vehiclesformpaing.concat(payload)]\r\n            }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}