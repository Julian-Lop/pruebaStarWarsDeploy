{"ast":null,"code":"var _jsxFileName = \"E:\\\\FULL STACK\\\\proyectos\\\\pruebaStarWars-OnClick\\\\front-starwars\\\\src\\\\Components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllStarships, resetState } from '../Redux/Actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination() {\n  _s();\n\n  const dispatch = useDispatch();\n  const dato = useSelector(state => state.starships);\n  let [next, setnext] = useState(dato.next ? dato.next.substr(-1) : 1);\n  let [previous, setprevious] = useState(dato.previous ? dato.previous.substr(-1) : 1);\n\n  const previousPage = () => {\n    dispatch(resetState());\n    dispatch(getAllStarships(previous));\n  };\n\n  const nextPage = () => {\n    dispatch(resetState());\n    dispatch(getAllStarships(next));\n  };\n\n  useEffect(() => {\n    setnext(dato.next.substr(-1));\n    setprevious(dato.previous.substr(-1));\n  }, [dato]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: previousPage,\n      children: \"Regresar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPage,\n      children: \"Siguiente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pagination, \"vKIp8PnU6PumX/9A3Wb5Z4noexk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["E:/FULL STACK/proyectos/pruebaStarWars-OnClick/front-starwars/src/Components/Pagination.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllStarships","resetState","Pagination","dispatch","dato","state","starships","next","setnext","substr","previous","setprevious","previousPage","nextPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,wBAA5C;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAxB;AAEA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACO,IAAI,CAACG,IAAL,GAAWH,IAAI,CAACG,IAAL,CAAUE,MAAV,CAAiB,CAAC,CAAlB,CAAX,GAAiC,CAAlC,CAA9B;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACO,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAAL,CAAcD,MAAd,CAAqB,CAAC,CAAtB,CAAhB,GAA2C,CAA5C,CAAtC;;AAEA,QAAMG,YAAY,GAAI,MAAM;AACxBT,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACAE,IAAAA,QAAQ,CAACH,eAAe,CAACU,QAAD,CAAhB,CAAR;AACH,GAHD;;AAKA,QAAMG,QAAQ,GAAG,MAAM;AACnBV,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACAE,IAAAA,QAAQ,CAACH,eAAe,CAACO,IAAD,CAAhB,CAAR;AACH,GAHD;;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACJ,IAAI,CAACG,IAAL,CAAUE,MAAV,CAAiB,CAAC,CAAlB,CAAD,CAAP;AACAE,IAAAA,WAAW,CAACP,IAAI,CAACM,QAAL,CAAcD,MAAd,CAAqB,CAAC,CAAtB,CAAD,CAAX;AACH,GAHQ,EAGP,CAACL,IAAD,CAHO,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEQ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA7BuBX,U;UACHJ,W,EAEJC,W;;;KAHOG,U","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getAllStarships, resetState } from '../Redux/Actions/index'\r\n\r\nexport default function Pagination(){\r\n    const dispatch = useDispatch()\r\n\r\n    const dato = useSelector((state) => state.starships)\r\n\r\n    let [next, setnext] = useState(dato.next? dato.next.substr(-1): 1)\r\n    let [previous, setprevious] = useState(dato.previous ? dato.previous.substr(-1) : 1)\r\n\r\n    const previousPage =  () => {\r\n        dispatch(resetState())\r\n        dispatch(getAllStarships(previous))\r\n    }\r\n\r\n    const nextPage = () => {\r\n        dispatch(resetState())\r\n        dispatch(getAllStarships(next))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setnext(dato.next.substr(-1))\r\n        setprevious(dato.previous.substr(-1))\r\n    },[dato])\r\n\r\n    return(\r\n        <div className=\"Pagination\">\r\n            <button onClick={previousPage}>Regresar</button>\r\n            <button onClick={nextPage} >Siguiente</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}